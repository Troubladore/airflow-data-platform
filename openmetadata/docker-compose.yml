# OpenMetadata Standalone Service
# ================================
# Metadata catalog and data discovery platform
#
# Dependencies:
#   - platform-infrastructure (provides platform-postgres via platform_network)
#
# Architecture: 2 OpenMetadata-specific services
#   - Elasticsearch: Search and indexing (OpenMetadata-specific)
#   - OpenMetadata Server: Web UI + REST API + Backend (all-in-one application)
#
# Usage:
#   Requires: platform-infrastructure must be running first
#   make start     # Start OpenMetadata
#   make stop      # Stop OpenMetadata
#   make status    # Check service health

services:
  # ============================================
  # Database Migration (Runs once on first startup)
  # ============================================
  # Creates OpenMetadata schema tables
  # Must complete before openmetadata-server starts
  # ============================================
  openmetadata-migrate:
    image: ${IMAGE_OPENMETADATA_SERVER:-docker.getcollate.io/openmetadata/server:1.10.1}
    container_name: openmetadata-migrate
    command: "./bootstrap/openmetadata-ops.sh migrate"

    env_file:
      - .env

    environment:
      # Database configuration (same as main server)
      DB_DRIVER_CLASS: org.postgresql.Driver
      DB_SCHEME: postgresql
      DB_HOST: platform-postgres
      DB_PORT: 5432
      OM_DATABASE: openmetadata_db
      DB_USER: openmetadata_user

      # OpenSearch configuration (environment vars still use ELASTICSEARCH prefix for compatibility)
      ELASTICSEARCH_HOST: openmetadata-opensearch
      ELASTICSEARCH_PORT: 9200
      SEARCH_TYPE: opensearch

      # Basic settings
      OPENMETADATA_CLUSTER_NAME: ${OPENMETADATA_CLUSTER_NAME:-local-dev}

    networks:
      - platform-net

    depends_on:
      openmetadata-opensearch:
        condition: service_healthy

    # This is a one-shot container - exits after migration completes
    restart: "no"

  # ============================================
  # OpenSearch (Search & Indexing)
  # ============================================
  # Provides full-text search for metadata catalog
  # Using OpenSearch (Apache 2.0 licensed) - OpenMetadata's official choice for PostgreSQL
  # Version 2.19.2 - Latest stable version supported by OpenMetadata (as of Oct 2025)
  # ============================================
  openmetadata-opensearch:
    image: ${IMAGE_OPENSEARCH:-opensearchproject/opensearch:2.19.2}
    container_name: openmetadata-opensearch
    restart: unless-stopped

    environment:
      # Single-node mode (suitable for local development)
      - discovery.type=single-node
      # Memory allocation (1GB heap for both min and max) - uses ES_JAVA_OPTS for compatibility
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
      # Disable security plugins for local development
      - plugins.security.disabled=true
      # Set initial admin password (required even with security disabled)
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=OpenMetadata_password123!!!
      # Increase max clause count for complex queries
      - indices.query.bool.max_clause_count=4096

    volumes:
      # Persistent storage for search indices
      - openmetadata_opensearch_data:/usr/share/opensearch/data

    networks:
      - platform-net  # Connect to shared platform network

    ports:
      - "9200:9200"  # REST API
      - "9300:9300"  # Node communication

    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health?pretty | grep status | grep -qE 'green|yellow' || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10

  # ============================================
  # OpenMetadata Server (UI + API + Connectors)
  # ============================================
  # Core metadata catalog application
  # - Web UI for browsing metadata
  # - REST API for programmatic access
  # - Built-in connectors (can run ad-hoc ingestion)
  # ============================================
  openmetadata-server:
    image: ${IMAGE_OPENMETADATA_SERVER:-docker.getcollate.io/openmetadata/server:1.10.1}
    container_name: openmetadata-server
    restart: unless-stopped

    # Load local .env (synchronized from platform-bootstrap/.env by wizard)
    env_file:
      - .env

    ports:
      - "${OPENMETADATA_PORT:-8585}:8585"
      - "8586:8586"  # Admin port for healthcheck

    environment:
      # ========================================
      # Server Configuration
      # ========================================
      OPENMETADATA_CLUSTER_NAME: ${OPENMETADATA_CLUSTER_NAME:-local-dev}
      SERVER_PORT: 8585
      SERVER_ADMIN_PORT: 8586
      SERVER_HOST_API_URL: http://openmetadata-server:8585/api
      LOG_LEVEL: INFO

      # ========================================
      # Database Configuration (PostgreSQL)
      # ========================================
      DB_DRIVER_CLASS: org.postgresql.Driver
      DB_SCHEME: postgresql
      DB_HOST: platform-postgres
      DB_PORT: 5432
      DB_PARAMS: allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      OM_DATABASE: openmetadata_db
      DB_USER: openmetadata_user
      # DB_USER_PASSWORD from .env file

      # Migration Configuration
      MIGRATION_LIMIT_PARAM: 1200

      # ========================================
      # OpenSearch Configuration
      # ========================================
      # Note: Environment variables still use ELASTICSEARCH prefix for backward compatibility
      ELASTICSEARCH_HOST: openmetadata-opensearch
      ELASTICSEARCH_PORT: 9200
      ELASTICSEARCH_SCHEME: http
      ELASTICSEARCH_USER: ""
      ELASTICSEARCH_PASSWORD: ""
      SEARCH_TYPE: "opensearch"  # CRITICAL: Must be "opensearch" not "elasticsearch"
      ELASTICSEARCH_TRUST_STORE_PATH: ""
      ELASTICSEARCH_TRUST_STORE_PASSWORD: ""
      ELASTICSEARCH_CONNECTION_TIMEOUT_SECS: 5
      ELASTICSEARCH_SOCKET_TIMEOUT_SECS: 60
      ELASTICSEARCH_KEEP_ALIVE_TIMEOUT_SECS: 600
      ELASTICSEARCH_BATCH_SIZE: 100
      ELASTICSEARCH_PAYLOAD_BYTES_SIZE: 10485760
      ELASTICSEARCH_INDEX_MAPPING_LANG: EN

      # ========================================
      # Authentication Configuration
      # ========================================
      AUTHENTICATION_PROVIDER: basic
      AUTHENTICATION_RESPONSE_TYPE: id_token
      AUTHENTICATION_PUBLIC_KEYS: "[http://localhost:8585/api/v1/system/config/jwks]"
      AUTHENTICATION_AUTHORITY: https://accounts.google.com
      AUTHENTICATION_CLIENT_ID: ""
      AUTHENTICATION_CALLBACK_URL: ""
      AUTHENTICATION_JWT_PRINCIPAL_CLAIMS: "[email,preferred_username,sub]"
      AUTHENTICATION_JWT_PRINCIPAL_CLAIMS_MAPPING: "[]"
      AUTHENTICATION_ENABLE_SELF_SIGNUP: true
      AUTHENTICATION_CLIENT_TYPE: public

      # OIDC Authentication (Disabled - using basic auth for local dev)
      # Uncomment if you need OIDC (Okta, Azure AD, etc.):
      # CUSTOM_OIDC_AUTHENTICATION_PROVIDER_NAME: ""
      # OIDC_CLIENT_ID: ""
      # OIDC_TYPE: ""  # google, azure, okta, etc.
      # OIDC_CLIENT_SECRET: ""
      # OIDC_SCOPE: "openid email profile"
      # OIDC_DISCOVERY_URI: ""
      # OIDC_USE_NONCE: true
      # OIDC_PREFERRED_JWS: "RS256"
      # OIDC_RESPONSE_TYPE: "code"
      # OIDC_DISABLE_PKCE: true
      # OIDC_CALLBACK: "http://localhost:8585/callback"
      # OIDC_SERVER_URL: "http://localhost:8585"
      # OIDC_CLIENT_AUTH_METHOD: "client_secret_post"
      # OIDC_TENANT: ""
      # OIDC_MAX_CLOCK_SKEW: ""
      # OIDC_CUSTOM_PARAMS: {}
      # OIDC_MAX_AGE: "0"
      # OIDC_PROMPT_TYPE: "consent"
      # OIDC_SESSION_EXPIRY: "604800"

      # SAML Authentication (Disabled - not used for local dev)
      # Uncomment if you need SAML SSO

      # LDAP Authentication (Disabled - not used for local dev)
      # Uncomment if you need LDAP integration

      # Authorizer Configuration
      AUTHORIZER_CLASS_NAME: org.openmetadata.service.security.DefaultAuthorizer
      AUTHORIZER_REQUEST_FILTER: org.openmetadata.service.security.JwtFilter
      AUTHORIZER_ADMIN_PRINCIPALS: "[admin]"
      AUTHORIZER_ALLOWED_REGISTRATION_DOMAIN: '["all"]'
      AUTHORIZER_INGESTION_PRINCIPALS: "[ingestion-bot]"
      AUTHORIZER_PRINCIPAL_DOMAIN: "open-metadata.org"
      AUTHORIZER_ALLOWED_DOMAINS: "[]"
      AUTHORIZER_ENFORCE_PRINCIPAL_DOMAIN: false
      AUTHORIZER_ENABLE_SECURE_SOCKET: false

      # ========================================
      # JWT Configuration
      # ========================================
      RSA_PUBLIC_KEY_FILE_PATH: ./conf/public_key.der
      RSA_PRIVATE_KEY_FILE_PATH: ./conf/private_key.der
      JWT_ISSUER: open-metadata.org
      JWT_KEY_ID: Gb389a-9f76-gdjs-a92j-0242bk94356

      # ========================================
      # Pipeline Service Client (Airflow Integration)
      # ========================================
      # We don't include separate ingestion container (use Astronomer instead)
      PIPELINE_SERVICE_CLIENT_ENABLED: true
      PIPELINE_SERVICE_CLIENT_CLASS_NAME: org.openmetadata.service.clients.pipeline.airflow.AirflowRESTClient
      # PIPELINE_SERVICE_CLIENT_ENDPOINT: http://ingestion:8080  # Not used - no ingestion container
      PIPELINE_SERVICE_CLIENT_HEALTH_CHECK_INTERVAL: 300
      PIPELINE_SERVICE_CLIENT_VERIFY_SSL: "no-ssl"
      PIPELINE_SERVICE_CLIENT_SSL_CERT_PATH: ""
      PIPELINE_SERVICE_CLIENT_SECRETS_MANAGER_LOADER: noop
      PIPELINE_SERVICE_IP_INFO_ENABLED: false
      PIPELINE_SERVICE_CLIENT_HOST_IP: ""

      # Airflow Integration Parameters
      AIRFLOW_USERNAME: admin
      AIRFLOW_PASSWORD: admin
      AIRFLOW_TIMEOUT: 10
      AIRFLOW_TRUST_STORE_PATH: ""
      AIRFLOW_TRUST_STORE_PASSWORD: ""
      FERNET_KEY: jJ/9sz0g0OHxsfxOoSfdFdmk3ysNmPRnH3TUAbz3IHA=

      # ========================================
      # Secrets Manager Configuration
      # ========================================
      SECRET_MANAGER: db
      OM_SM_REGION: ""
      OM_SM_ACCESS_KEY_ID: ""
      OM_SM_ACCESS_KEY: ""

      # ========================================
      # Email Configuration (Disabled for local dev)
      # ========================================
      OM_EMAIL_ENTITY: "OpenMetadata"
      OM_SUPPORT_URL: "https://slack.open-metadata.org"
      AUTHORIZER_ENABLE_SMTP: false
      # Uncomment if you need email notifications:
      # OPENMETADATA_SERVER_URL: ""
      # OPENMETADATA_SMTP_SENDER_MAIL: ""
      # SMTP_SERVER_ENDPOINT: ""
      # SMTP_SERVER_PORT: ""
      # SMTP_SERVER_USERNAME: ""
      # SMTP_SERVER_PWD: ""
      # SMTP_SERVER_STRATEGY: "SMTP_TLS"

      # ========================================
      # Performance & Memory
      # ========================================
      OPENMETADATA_HEAP_OPTS: "-Xmx1G -Xms1G"

      # ========================================
      # Event Monitoring
      # ========================================
      EVENT_MONITOR: prometheus
      EVENT_MONITOR_BATCH_SIZE: 10
      EVENT_MONITOR_PATH_PATTERN: '["/api/v1/tables/*", "/api/v1/health-check"]'
      EVENT_MONITOR_LATENCY: "[]"

      # ========================================
      # Web Security Configuration
      # ========================================
      WEB_CONF_URI_PATH: "/api"
      MASK_PASSWORDS_API: false

      # HSTS (Disabled for local dev - no HTTPS)
      WEB_CONF_HSTS_ENABLED: false
      WEB_CONF_HSTS_MAX_AGE: "365 days"
      WEB_CONF_HSTS_INCLUDE_SUBDOMAINS: "true"
      WEB_CONF_HSTS_PRELOAD: "true"

      # Frame Options (Disabled for local dev)
      WEB_CONF_FRAME_OPTION_ENABLED: false
      WEB_CONF_FRAME_OPTION: "SAMEORIGIN"
      WEB_CONF_FRAME_ORIGIN: ""

      # Content Security (Disabled for local dev)
      WEB_CONF_CONTENT_TYPE_OPTIONS_ENABLED: false
      WEB_CONF_XSS_PROTECTION_ENABLED: false
      WEB_CONF_XSS_PROTECTION_ON: true
      WEB_CONF_XSS_PROTECTION_BLOCK: true
      WEB_CONF_XSS_CSP_ENABLED: false
      WEB_CONF_XSS_CSP_POLICY: "default-src 'self'"
      WEB_CONF_XSS_CSP_REPORT_ONLY_POLICY: ""

      # Cache Control
      WEB_CONF_CACHE_CONTROL: ""
      WEB_CONF_PRAGMA: ""

    depends_on:
      openmetadata-opensearch:
        condition: service_healthy
      openmetadata-migrate:
        condition: service_completed_successfully
      # Note: platform-postgres from platform-infrastructure must be running first
      # (validated by setup script - can't add depends_on for external service)

    networks:
      - platform-net  # Connect to shared platform network (where platform-postgres lives)

    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8586/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

# ============================================
# Volumes
# ============================================

volumes:
  # OpenSearch indices (OpenMetadata-specific data)
  # May already exist from previous setup - use external to avoid warning
  openmetadata_opensearch_data:
    name: openmetadata_opensearch_data
    external: true

  # Note: platform_postgres_data volume is managed by platform-infrastructure service

# ============================================
# Networks
# ============================================

networks:
  # Shared platform network (managed by platform-infrastructure)
  # All platform services connect to this network
  platform-net:
    name: platform_network
    external: true
