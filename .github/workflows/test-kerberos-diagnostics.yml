name: Test Kerberos Diagnostics

on:
  pull_request:
    paths:
      - 'platform-bootstrap/*.sh'
      - 'platform-bootstrap/lib/*.sh'
      - 'platform-bootstrap/tests/*.sh'
      - 'platform-bootstrap/tests/*.bats'
      - '.github/workflows/test-kerberos-diagnostics.yml'
  push:
    branches: [main]
    paths:
      - 'platform-bootstrap/*.sh'
      - 'platform-bootstrap/lib/*.sh'
      - 'platform-bootstrap/tests/*.sh'

jobs:
  syntax-check:
    name: Syntax Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check shell script syntax
        run: |
          echo "Checking shell script syntax..."
          failed=0
          for script in platform-bootstrap/*.sh platform-bootstrap/lib/*.sh platform-bootstrap/tests/*.sh; do
            if [[ -f "$script" ]]; then
              echo "Checking: $script"
              if ! bash -n "$script"; then
                echo "❌ Syntax error in $script"
                failed=1
              else
                echo "✅ $script"
              fi
            fi
          done
          if [[ $failed -eq 1 ]]; then
            echo "Syntax validation failed!"
            exit 1
          fi
          echo "All scripts passed syntax validation"

  shellcheck:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@2.0.0
        with:
          scandir: './platform-bootstrap'
          format: gcc
          severity: warning
          ignore_paths: 'deprecated tests/fixtures'
        env:
          SHELLCHECK_OPTS: -e SC2034 -e SC2155  # Exclude some pedantic checks

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup BATS
        run: |
          git clone https://github.com/bats-core/bats-core.git
          cd bats-core
          sudo ./install.sh /usr/local

      - name: Run BATS tests
        working-directory: platform-bootstrap
        run: |
          if [[ -f tests/test-kerberos-diagnostics.bats ]]; then
            bats tests/test-kerberos-diagnostics.bats
          else
            echo "No BATS tests found"
          fi

      - name: Test library loading
        working-directory: platform-bootstrap
        run: |
          # Test that library can be sourced
          bash -c 'source lib/kerberos-diagnostics.sh && detect_environment'

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [syntax-check, shellcheck]
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y krb5-user

      - name: Test diagnostic scripts
        working-directory: platform-bootstrap
        run: |
          # Test that scripts can show help without errors
          ./test-sql-direct.sh --help || true
          ./test-sql-direct-v2.sh --help || true

          # Test that krb5-auth-test.sh can run basic diagnostics
          if [[ -f krb5-auth-test.sh ]]; then
            ./krb5-auth-test.sh -h || true
          fi

      - name: Run test suite
        working-directory: platform-bootstrap
        run: |
          if [[ -x tests/run-tests.sh ]]; then
            # Run without BATS if not installed
            tests/run-tests.sh || true
          fi

  documentation:
    name: Documentation Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check documentation
        run: |
          # Verify key files have documentation headers
          echo "Checking for documentation headers..."

          if ! grep -q "^# Kerberos Diagnostics Library" platform-bootstrap/lib/kerberos-diagnostics.sh; then
            echo "❌ Missing documentation header in kerberos-diagnostics.sh"
            exit 1
          fi

          echo "✅ Documentation headers present"
