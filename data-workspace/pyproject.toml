[tool.uv.workspace]
members = [
    "data-platform-framework",
    "../layer2-datakits/pagila-source",
    "../layer2-datakits/pagila-bronze",
    "../layer2-datakits/postgres-runner",
    "../layer2-datakits/sqlserver-runner",
    "../layer2-datakits/spark-runner"
]

[project]
name = "data-workspace"
version = "0.1.0"
description = "Core data platform workspace - framework and datakits"
requires-python = "==3.12.11"
dependencies = [
    "data-platform-framework",
    "datakit-pagila-bronze",
]

[tool.uv.sources]
data-platform-framework = { workspace = true }
datakit-pagila-bronze = { workspace = true }

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pre-commit>=4.0.0",
]

# Workspace root - no build system needed
# [build-system]
# requires = ["hatchling"]
# build-backend = "hatchling.build"

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "D",   # pydocstyle
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "D100",  # missing docstring in public module
    "D101",  # missing docstring in public class
    "D102",  # missing docstring in public method
    "D103",  # missing docstring in public function
    "D104",  # missing docstring in public package
    "D105",  # missing docstring in magic method
    "D107",  # missing docstring in __init__
    "D301",  # use r""" if any backslashes in docstring
    "D415",  # first line should end with period
]

[tool.ruff.lint.pydocstyle]
convention = "google"
