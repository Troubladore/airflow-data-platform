---
# Main orchestration playbook for platform setup
# Attempts full automation, fails gracefully for admin tasks

- name: "üîç Detect Environment and Permissions"
  hosts: localhost
  gather_facts: yes
  become: no
  vars:
    ansible_become_pass: "{{ ansible_sudo_pass | default(omit) }}"
  tasks:
    - name: Display setup banner
      debug:
        msg: |
          üöÄ Starting Astronomer Airflow Platform Setup

          Strategy: Try to automate everything, fail gracefully
          - ‚úÖ Local admins: Full automation
          - ‚ö†Ô∏è  Non-admins: Clear guidance for manual steps

          Platform Components:
          - Windows prerequisites (mkcert, hosts, Docker Desktop)
          - WSL2 environment setup
          - Certificate management
          - Traefik reverse proxy
          - Docker container registry
          - End-to-end validation

    - name: Check if running in WSL2
      shell: uname -r | grep -i microsoft
      register: wsl2_check
      failed_when: false
      changed_when: false

    - name: Verify WSL2 environment
      fail:
        msg: |
          ‚ùå This must be run from within WSL2

          Please:
          1. Open WSL2 terminal
          2. cd to this repository
          3. Run: ansible-playbook -i inventory/local-dev.ini site.yml
      when: wsl2_check.rc != 0

    - name: Check Windows WinRM accessibility
      uri:
        url: "http://127.0.0.1:5985/wsman"
        method: GET
        timeout: 5
      register: winrm_check
      failed_when: false
      changed_when: false

    - name: Set Windows accessibility based on WinRM availability
      set_fact:
        windows_accessible: "{{ winrm_check.status is defined and winrm_check.status in [200, 401, 500] }}"

    - name: Set execution strategy
      set_fact:
        windows_available: "{{ windows_accessible }}"
        execution_mode: "{{ 'cross-platform' if windows_accessible else 'wsl2-only' }}"

    - name: Display execution mode
      debug:
        msg: |
          üöÄ Execution Mode: {{ execution_mode }}
          ü™ü Windows Host: {{ 'Available' if windows_available else 'WSL2-only (requires Windows prerequisites)' }}

    - name: Run comprehensive system diagnostics
      when: not windows_available
      block:
        - name: Execute system state diagnostic
          script: "{{ playbook_dir }}/../scripts/diagnostics/system-state.sh"
          register: system_diagnostics
          failed_when: false
          changed_when: false

        - name: Parse diagnostic results
          set_fact:
            needs_mkcert: "{{ 'mkcert: Not installed' in system_diagnostics.stdout }}"
            needs_certificates: "{{ 'Certificates: Not found' in system_diagnostics.stdout }}"
            needs_ca_trust: "{{ 'Windows CA trust: mkcert CA not found' in system_diagnostics.stdout }}"
            has_hosts: "{{ 'Windows hosts file: All entries present' in system_diagnostics.stdout }}"
            needs_proxy_bypass: "{{ 'Proxy bypass: *.localhost missing' in system_diagnostics.stdout }}"

        - name: Show diagnostic summary
          debug:
            msg: |
              üîç System State Analysis:
              {{ system_diagnostics.stdout_lines | join('\n') }}

        - name: Windows prerequisites required
          pause:
            prompt: |

              ‚ö†Ô∏è  Windows Prerequisites Required!

              System diagnostic shows missing components:
              {{ '‚Ä¢ mkcert installation' if needs_mkcert else '' }}
              {{ '‚Ä¢ Certificate generation' if needs_certificates else '' }}
              {{ '‚Ä¢ Windows CA trust store' if needs_ca_trust else '' }}
              {{ '‚Ä¢ Docker proxy bypass configuration' if needs_proxy_bypass else '' }}

              Open Windows PowerShell **AS ADMINISTRATOR** and run:

                cd \\wsl$\Ubuntu\home\{{ ansible_env.USER }}\repos\airflow-data-platform
                .\scripts\win-prereqs.ps1

              The script will detect current state and only fix what's missing.
              After running the script, press Enter here to continue...
          when: needs_mkcert or needs_certificates or needs_ca_trust or needs_proxy_bypass

        - name: Windows prerequisites appear complete
          debug:
            msg: |
              ‚úÖ Windows Prerequisites Complete

              All Windows components detected successfully.
              Proceeding with platform setup.
          when: not (needs_mkcert or needs_certificates or needs_ca_trust or needs_proxy_bypass)

- name: "ü™ü Windows Prerequisites and Setup"
  import_playbook: validate-windows.yml
  when: windows_available | default(false)

- name: "üêß WSL2 Environment Setup"
  import_playbook: setup-wsl2.yml

- name: "‚úÖ End-to-End Validation"
  import_playbook: validate-all.yml
