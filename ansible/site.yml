---
# Main orchestration playbook for platform setup
# Attempts full automation, fails gracefully for admin tasks

- name: "üîç Detect Environment and Permissions"
  hosts: localhost
  gather_facts: yes
  become: no
  vars:
    ansible_become_pass: "{{ ansible_sudo_pass | default(omit) }}"
  tasks:
    - name: Display setup banner
      debug:
        msg: |
          üöÄ Starting Astronomer Airflow Platform Setup

          Strategy: Try to automate everything, fail gracefully
          - ‚úÖ Local admins: Full automation
          - ‚ö†Ô∏è  Non-admins: Clear guidance for manual steps

          Platform Components:
          - Windows prerequisites (mkcert, hosts, Docker Desktop)
          - WSL2 environment setup
          - Certificate management
          - Traefik reverse proxy
          - Docker container registry
          - End-to-end validation

    - name: Check if running in WSL2
      shell: uname -r | grep -i microsoft
      register: wsl2_check
      failed_when: false
      changed_when: false

    - name: Verify WSL2 environment
      fail:
        msg: |
          ‚ùå This must be run from within WSL2

          Please:
          1. Open WSL2 terminal
          2. cd to this repository
          3. Run: ansible-playbook -i inventory/local-dev.ini site.yml
      when: wsl2_check.rc != 0

    - name: Check Windows WinRM accessibility
      uri:
        url: "http://127.0.0.1:5985/wsman"
        method: GET
        timeout: 5
      register: winrm_check
      failed_when: false
      changed_when: false

    - name: Set Windows accessibility based on WinRM availability
      set_fact:
        windows_accessible: "{{ winrm_check.status is defined and winrm_check.status in [200, 401, 500] }}"

    - name: Set execution strategy
      set_fact:
        windows_available: "{{ windows_accessible }}"
        execution_mode: "{{ 'cross-platform' if windows_accessible else 'wsl2-only' }}"

    - name: Display execution mode
      debug:
        msg: |
          üöÄ Execution Mode: {{ execution_mode }}
          ü™ü Windows Host: {{ 'Available' if windows_available else 'WSL2-only (requires Windows prerequisites)' }}

    - name: Check if Windows prerequisites might be needed
      when: not windows_available
      block:
        - name: Check if certificates exist in WSL2
          stat:
            path: "{{ ansible_env.HOME }}/.local/share/certs/dev-localhost-wild.crt"
          register: cert_check

        - name: Check hosts file entries from WSL2
          shell: getent hosts registry.localhost traefik.localhost airflow.localhost | wc -l
          register: hosts_check
          failed_when: false
          changed_when: false

        - name: Windows prerequisites required
          pause:
            prompt: |

              ‚ö†Ô∏è  Windows Prerequisites Required!

              Some Windows setup appears to be missing:
              - Certificates: {{ '‚úÖ Found' if cert_check.stat.exists else '‚ùå Missing' }}
              - Hosts entries: {{ '‚úÖ Found (' + hosts_check.stdout + '/3)' if hosts_check.stdout|int > 0 else '‚ùå Missing' }}

              Since WinRM is not available, you need to run Windows setup manually.
              This will handle:
                ‚Ä¢ mkcert installation {{ '(‚úÖ may be done)' if cert_check.stat.exists else '' }}
                ‚Ä¢ Certificate generation {{ '(‚úÖ may be done)' if cert_check.stat.exists else '' }}
                ‚Ä¢ Hosts file entries (registry.localhost, traefik.localhost, airflow.localhost)
                ‚Ä¢ Windows CA trust store
                ‚Ä¢ Docker Desktop proxy configuration

              Open Windows PowerShell **AS ADMINISTRATOR** and run:

                cd \\wsl$\Ubuntu\home\{{ ansible_env.USER }}\repos\airflow-data-platform
                .\scripts\win-prereqs.ps1

              OR from WSL2 terminal (separate tab):

                cd /home/{{ ansible_env.USER }}/repos/airflow-data-platform
                powershell.exe -Command "Start-Process powershell -Verb RunAs -ArgumentList '-File scripts/win-prereqs.ps1'"

              The script will:
                1. Check what's already installed
                2. Skip things that exist
                3. Only prompt for admin if needed for hosts file
                4. Show exactly what was done

              After running the script, press Enter here to continue...
          when: not cert_check.stat.exists or hosts_check.stdout|int < 3

        - name: Windows prerequisites appear complete
          debug:
            msg: |
              ‚úÖ Windows Prerequisites Appear Complete

              - Certificates: ‚úÖ Found in WSL2
              - Hosts entries: ‚úÖ Found ({{ hosts_check.stdout }}/3)

              Skipping Windows prerequisites prompt since everything appears to be set up.
              If you encounter issues, you can still run: .\scripts\win-prereqs.ps1
          when: cert_check.stat.exists and hosts_check.stdout|int >= 3

- name: "ü™ü Windows Prerequisites and Setup"
  import_playbook: validate-windows.yml
  when: windows_available | default(false)

- name: "üêß WSL2 Environment Setup"
  import_playbook: setup-wsl2.yml

- name: "‚úÖ End-to-End Validation"
  import_playbook: validate-all.yml
