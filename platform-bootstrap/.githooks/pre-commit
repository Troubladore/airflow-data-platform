#!/bin/bash
# Pre-commit hook to prevent direct commits to protected branches
# ================================================================
# This hook prevents accidentally committing directly to main/master branches
# Forces use of feature branches and PR workflow

# Get current branch name
current_branch=$(git symbolic-ref --short HEAD 2>/dev/null)

# Define protected branches
protected_branches=("main" "master" "production" "staging")

# Colors for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

# Check if we're on a protected branch
for branch in "${protected_branches[@]}"; do
    if [ "$current_branch" = "$branch" ]; then
        echo ""
        echo -e "${RED}================================================================${NC}"
        echo -e "${RED}ERROR: Direct commits to $branch branch are not allowed!${NC}"
        echo -e "${RED}================================================================${NC}"
        echo ""
        echo -e "${YELLOW}You are currently on branch: $current_branch${NC}"
        echo ""
        echo "This repository requires all changes to go through pull requests."
        echo "Direct commits to protected branches violate our workflow."
        echo ""
        echo -e "${GREEN}To fix this:${NC}"
        echo "1. Create a feature branch:"
        echo -e "   ${GREEN}git checkout -b fix/your-feature-name${NC}"
        echo ""
        echo "2. Commit your changes on the feature branch:"
        echo -e "   ${GREEN}git add .${NC}"
        echo -e "   ${GREEN}git commit -m \"your commit message\"${NC}"
        echo ""
        echo "3. Push the feature branch and create a PR:"
        echo -e "   ${GREEN}git push -u origin fix/your-feature-name${NC}"
        echo -e "   ${GREEN}gh pr create${NC}"
        echo ""
        echo "4. If you already made commits to $branch locally, move them:"
        echo -e "   ${GREEN}git checkout -b fix/your-feature-name${NC}"
        echo -e "   ${GREEN}git checkout $branch${NC}"
        echo -e "   ${GREEN}git reset --hard origin/$branch${NC}"
        echo ""
        echo -e "${RED}Commit blocked to enforce PR workflow.${NC}"
        echo -e "${RED}================================================================${NC}"
        echo ""
        exit 1
    fi
done

# Not on a protected branch, allow commit
exit 0