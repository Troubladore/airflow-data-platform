# SQL Server Test Image with Microsoft sqlcmd
# ============================================
# Pre-built image with Microsoft ODBC Driver and sqlcmd for SQL Server testing
# Build once, use many times - no runtime downloads needed
#
# Build:
#   docker build -f Dockerfile.sqlcmd-test \
#     --build-arg IMAGE_ALPINE=${IMAGE_ALPINE} \
#     --build-arg MSSQL_TOOLS_URL=${MSSQL_TOOLS_URL} \
#     --secret id=netrc,src=${HOME}/.netrc \
#     -t platform/sqlcmd-test:latest .
#
# Use:
#   ../test-sql-prebuilt.sh sqlserver01.company.com TestDB

ARG IMAGE_ALPINE
FROM ${IMAGE_ALPINE:-alpine:3.19}

# Install Kerberos and curl for downloads
RUN apk add --no-cache krb5 curl

# Architecture detection and package download
ARG MSSQL_TOOLS_URL
RUN --mount=type=secret,id=netrc,target=/root/.netrc \
    # Detect architecture \
    case $(uname -m) in \
        x86_64) ARCH="amd64" ;; \
        aarch64|arm64) ARCH="arm64" ;; \
        *) echo "Unsupported architecture: $(uname -m)" && exit 1 ;; \
    esac && \
    # Determine download URL \
    if [ -n "${MSSQL_TOOLS_URL}" ]; then \
        echo "Using corporate mirror: ${MSSQL_TOOLS_URL}" && \
        BASE_URL="${MSSQL_TOOLS_URL}"; \
    else \
        echo "Using Microsoft downloads" && \
        BASE_URL="https://download.microsoft.com/download/7/6/d/76de322a-d860-4894-9945-f0cc5d6a45f8"; \
    fi && \
    # Download packages \
    cd /tmp && \
    echo "Downloading ODBC driver..." && \
    curl -fsSL -o msodbcsql18.apk "${BASE_URL}/msodbcsql18_18.4.1.1-1_${ARCH}.apk" && \
    echo "Downloading SQL tools..." && \
    curl -fsSL -o mssql-tools18.apk "${BASE_URL}/mssql-tools18_18.4.1.1-1_${ARCH}.apk" && \
    # Install packages \
    echo "Installing Microsoft packages..." && \
    apk add --allow-untrusted msodbcsql18.apk mssql-tools18.apk && \
    # Clean up \
    rm -f *.apk && \
    # Verify installation \
    /opt/mssql-tools18/bin/sqlcmd -? > /dev/null && \
    echo "âœ“ sqlcmd installed successfully"

# Add sqlcmd to PATH
ENV PATH="/opt/mssql-tools18/bin:${PATH}"

# Default entrypoint for testing
ENTRYPOINT ["/bin/sh"]
