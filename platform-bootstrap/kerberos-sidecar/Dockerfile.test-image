# Kerberos SQL Server Test Image
# Pre-built with all dependencies to avoid runtime pip installs
# Uses corporate Artifactory for all packages

ARG IMAGE_PYTHON
FROM ${IMAGE_PYTHON:-python:3.11-alpine}

# Install Kerberos and ODBC dependencies (from Alpine repos or corporate mirror)
RUN apk add --no-cache \
    krb5 \
    gcc \
    musl-dev \
    unixodbc-dev

# Corporate PyPI configuration
# Build args pass through from host environment (auto-detected by Makefile)
ARG PIP_INDEX_URL
ARG PIP_TRUSTED_HOST

# Install UV (fast Python package installer)
RUN pip install --no-cache-dir uv

# Configure UV/pip for corporate environment if provided
RUN if [ -n "$PIP_INDEX_URL" ]; then \
        echo "Configuring for corporate PyPI: $PIP_INDEX_URL" && \
        uv pip config set global.index-url "$PIP_INDEX_URL" 2>/dev/null || \
        pip config set global.index-url "$PIP_INDEX_URL"; \
    fi && \
    if [ -n "$PIP_TRUSTED_HOST" ]; then \
        echo "Trusted host: $PIP_TRUSTED_HOST" && \
        uv pip config set global.trusted-host "$PIP_TRUSTED_HOST" 2>/dev/null || \
        pip config set global.trusted-host "$PIP_TRUSTED_HOST"; \
    fi

# Install Python packages using UV (much faster than pip)
# Will use corporate PyPI if configured via build args
RUN uv pip install --system --no-cache pyodbc

# Set working directory
WORKDIR /app

# Default command (overridden at runtime)
CMD ["python"]
