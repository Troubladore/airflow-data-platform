# Kerberos SQL Server Test Image
# Pre-built with all dependencies to avoid runtime pip installs
# Uses corporate Artifactory for all packages

ARG IMAGE_PYTHON
FROM ${IMAGE_PYTHON:-python:3.11-alpine}

# Install Kerberos and ODBC dependencies (from Alpine repos or corporate mirror)
RUN apk add --no-cache \
    krb5 \
    gcc \
    musl-dev \
    unixodbc-dev

# Corporate PyPI configuration
# Build args pass through from host environment (auto-detected by Makefile)
ARG PIP_INDEX_URL
ARG PIP_TRUSTED_HOST

# Install pyodbc with .netrc mounted for authentication
# The .netrc file is mounted temporarily (NOT stored in image)
# Using pip (not UV) for simplicity - this is just a test image
RUN --mount=type=secret,id=netrc,target=/root/.netrc \
    # Configure pip for corporate environment if provided \
    if [ -n "$PIP_INDEX_URL" ]; then \
        echo "Configuring for corporate PyPI: $PIP_INDEX_URL" && \
        pip config set global.index-url "$PIP_INDEX_URL"; \
    fi && \
    if [ -n "$PIP_TRUSTED_HOST" ]; then \
        echo "Trusted host: $PIP_TRUSTED_HOST" && \
        pip config set global.trusted-host "$PIP_TRUSTED_HOST"; \
    fi && \
    # Install pyodbc using pip \
    echo "Installing pyodbc..." && \
    pip install --no-cache-dir pyodbc

# Credentials are NOT in the final image - only used during build
# Verify: docker run --rm platform/kerberos-test:latest cat /root/.netrc (will fail)

# Set working directory
WORKDIR /app

# Default command (overridden at runtime)
CMD ["python"]
