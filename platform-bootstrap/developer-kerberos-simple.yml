# Simple Kerberos Ticket Sharing for WSL2
# =========================================
# Shares existing developer Kerberos tickets with Docker containers
# No custom image needed - just Alpine Linux with krb5

services:
  # Simple ticket sharing service
  kerberos-platform-service:
    image: alpine:latest
    container_name: kerberos-platform-service
    command: |
      sh -c "
        # Install Kerberos tools
        apk add --no-cache krb5 &&

        echo 'Kerberos Ticket Sharing Service Started' &&
        echo \"Cache Type: \${KERBEROS_CACHE_TYPE}\" &&
        echo \"Cache Path: \${KERBEROS_CACHE_PATH}\" &&
        echo \"Ticket: \${KERBEROS_CACHE_TICKET}\" &&

        # Function to find and copy ticket
        copy_ticket() {
          # Use configured location first
          if [ \"\${KERBEROS_CACHE_TYPE}\" = \"DIR\" ]; then
            # Directory collection format
            TICKET_PATH=\"/ticket-source/\${KERBEROS_CACHE_TICKET}\"
            if [ -f \"\$TICKET_PATH\" ]; then
              cp \"\$TICKET_PATH\" /krb5/cache/krb5cc
              chmod 644 /krb5/cache/krb5cc
              echo \"✓ Shared ticket from configured DIR location: \$TICKET_PATH\"
              return 0
            fi
          elif [ \"\${KERBEROS_CACHE_TYPE}\" = \"FILE\" ]; then
            # Single file format
            TICKET_PATH=\"/ticket-source/\${KERBEROS_CACHE_TICKET}\"
            if [ -f \"\$TICKET_PATH\" ]; then
              cp \"\$TICKET_PATH\" /krb5/cache/krb5cc
              chmod 644 /krb5/cache/krb5cc
              echo \"✓ Shared ticket from configured FILE location: \$TICKET_PATH\"
              return 0
            fi
            # Also check for wildcard pattern
            for ticket in /ticket-source/krb5cc_*; do
              if [ -f \"\$ticket\" ]; then
                cp \"\$ticket\" /krb5/cache/krb5cc
                chmod 644 /krb5/cache/krb5cc
                echo \"✓ Shared ticket from: \$ticket\"
                return 0
              fi
            done
          fi

          # Fallback to common locations if configured path fails
          for ticket in /tmp-fallback/krb5cc_* /krb5cache-fallback/krb5cc; do
            if [ -f \"\$ticket\" ]; then
              cp \"\$ticket\" /krb5/cache/krb5cc
              chmod 644 /krb5/cache/krb5cc
              echo \"✓ Shared ticket from fallback: \$ticket\"
              return 0
            fi
          done

          echo '✗ No tickets found in configured or fallback locations'
          return 1
        }

        # Initial copy
        copy_ticket &&

        # Keep container running and refresh periodically
        while true; do
          sleep 300
          echo 'Refreshing tickets...'
          copy_ticket >/dev/null 2>&1
        done
      "

    environment:
      # Configuration from .env file
      KERBEROS_CACHE_TYPE: ${KERBEROS_CACHE_TYPE:-FILE}
      KERBEROS_CACHE_PATH: ${KERBEROS_CACHE_PATH:-/tmp}
      KERBEROS_CACHE_TICKET: ${KERBEROS_CACHE_TICKET:-krb5cc_1000}

    volumes:
      # Mount the configured ticket location
      - ${KERBEROS_CACHE_PATH:-/tmp}:/ticket-source:ro

      # Fallback mounts for common locations
      - /tmp:/tmp-fallback:ro
      - ${HOME}/.krb5_cache:/krb5cache-fallback:ro

      # Shared volume for other containers
      - platform_kerberos_cache:/krb5/cache:rw

      # Use system krb5.conf
      - /etc/krb5.conf:/etc/krb5.conf:ro

    networks:
      - platform_network

volumes:
  platform_kerberos_cache:
    name: platform_kerberos_cache

networks:
  platform_network:
    name: platform_network
    driver: bridge
